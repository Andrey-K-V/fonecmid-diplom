
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
// ++Диплом Купцов А.В. 29.06.2025
// Добавлена Добавлена команда Заполнить

	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Ссылка.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслугУслуги.Ссылка.Договор КАК Договор,
		|	РеализацияТоваровУслугУслуги.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугУслуги.Сумма КАК Сумма
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
		|	И РеализацияТоваровУслугУслуги.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Номенклатура",Справочники.Номенклатура.НайтиПоНаименованию("Выполненные работы"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Клиент = Выборка.Контрагент;
		Движение.Договор = Выборка.Договор;
		Движение.СуммаВыставленныхАктов = Выборка.Сумма;
	
	КонецЦикла;

// --Диплом Купцов А.В. 29.06.2025

КонецПроцедуры

// ++Диплом Купцов А.В. 22.05.2025
// Добавлена Добавлена команда Заполнить
// Параметры:
//  Договор - СправочникСсылка.ДоговорыКонтрагентов
//  Контрагент - СправочникСсылка.Контрагенты
//  Дата - Дата - дата документа

Процедура ВКМ_ВыполнитьАвтозаполнение(Договор, Контрагент, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НоменклатураАбонентскаяПлата.Значение КАК НоменклатураАбонентскаяПлата,
		|	ВКМ_НоменклатураРаботыСпециалиста.Значение КАК НоменклатураРаботыСпециалиста
		|ИЗ
		|	Константа.ВКМ_НоменклатураАбонентскаяПлата КАК ВКМ_НоменклатураАбонентскаяПлата,
		|	Константа.ВКМ_НоменклатураРаботыСпециалиста КАК ВКМ_НоменклатураРаботыСпециалиста";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		НоменклатураАбонентскаяПлата = Выборка.НоменклатураАбонентскаяПлата;
		НоменклатураРаботыСпециалиста = Выборка.НоменклатураРаботыСпециалиста;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Константа ""НоменклатураАбонентскаяПлата"" не заполнена";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Константа ""НоменклатураРаботыСпециалиста"" не заполнена";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Услуги.Очистить();
			
	ЗаполнитьТЧУслуги(Договор, Контрагент, Дата);
	
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");

КонецПроцедуры

Процедура ЗаполнитьТЧУслуги(Договор, Контрагент, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты, 0) КАК СуммаАбонентскойПлаты
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасов,
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоМесяца, &КонецМесяца,, Клиент = &Контрагент
		|	И Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаАбонентскаяПлата = МассивРезультатов[0].Выбрать();
	ВыборкаВыполненныеРаботы = МассивРезультатов[1].Выбрать();
	
	Если ВыборкаАбонентскаяПлата.Следующий() Тогда
		АбонентскаяПлата = ВыборкаАбонентскаяПлата.СуммаАбонентскойПлаты;
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("Ежемесячное Обслуживание");
		НоваяСтрока.Цена = АбонентскаяПлата;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Сумма = АбонентскаяПлата;
	КонецЕсли;
	
	Если ВыборкаВыполненныеРаботы.Следующий() Тогда
		ВыполненныеРаботыЧас = ВыборкаВыполненныеРаботы.КоличествоЧасов;
		ВыполненныеРаботыСумма = ВыборкаВыполненныеРаботы.СуммаКОплате;
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("Выполненные работы");
		НоваяСтрока.Сумма = ВыполненныеРаботыСумма;
		НоваяСтрока.Количество = ВыполненныеРаботыЧас;
		НоваяСтрока.Цена = ВыполненныеРаботыСумма/ВыполненныеРаботыЧас;
	КонецЕсли;
	
КонецПроцедуры
// --Диплом Купцов А.В. 22.05.2025

#КонецОбласти

#КонецЕсли
